#!/usr/bin/env python

import argparse
import os

from common import BuildException
from test_repositories import test_repositories


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('rosdistro')
    parser.add_argument('repository')
    parser.add_argument('--workspace')
    parser.add_argument('--build_in_workspace', action='store_true')
    parser.add_argument('--sudo', action='store_true')
    parser.add_argument('--no-chroot', action='store_true')
    parser.add_argument('--repo-path')
    args = parser.parse_args()

    if not args.workspace:
        args.workspace = os.environ['WORKSPACE']
    if not os.path.exists(args.workspace):
        os.makedirs(args.workspace)

    print("Running devel test on ROS distro '%s' and repository '%s'" % (args.rosdistro, args.repository))
    if not args.repo_path:
        repo_list = [args.repository]
        version_list = ['devel']
        repo_sourcespace = None
    else:
        repo_list = []
        version_list = []
        repo_sourcespace = args.repo_path
    test_repositories(args.rosdistro, repo_list, version_list, args.workspace, test_depends_on=False,
                      build_in_workspace=args.build_in_workspace, sudo=args.sudo, no_chroot=args.no_chroot,
                      repo_sourcespace=repo_sourcespace)


if __name__ == '__main__':
    # global try
    try:
        main()
        print("devel script finished cleanly")

    # global catch
    except BuildException as ex:
        print(ex.msg)
        raise

    except Exception as ex:
        print("devel script failed. Check out the console output above for details.")
        raise
